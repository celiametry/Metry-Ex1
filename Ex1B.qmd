---
title: "Ex1b"
format: html
editor: visual
---
The necessary library needs to be loaded.
```{r}
library(ggplot2)
```

Let`s start. First I wrote down all the information in comments and adapted it into a formula.

```{r}
mu=mean=10
#dispersion=2
#variance=(mu+mu^2)*dispersion
variance=10+10^2*2
variance
```


Here I explain the formula and show how the formula is adapted.


```{r}
#rnbinom(n, size, prob, mu) #rnbinom(n, size, prob, mu) n=number of observations| size=dispersion parameter | prob= probability of success in each trial | mu= alterniative parameterization via mean
rnbinom(n=100, size=2, mu=10)

```

Let`s move on to the *linear* Histogram.

```{r}
hist(rnbinom(n=100, size=2, mu=10),
     main="Histogram of negative binomial distribution in Ex 1B") 
```

If we want to eliminate the break in the x-axis in the bins, the following code can be applied.

```{r}
hist(rnbinom(n=100, size=2, mu=10),
     breaks = "Sturges",
     main="Histogram of negative binomial distribution in Ex 1B")
```

But, here we will work with the first option for the following preperation of the Histogram.


```{r}
hist(rnbinom(n=100, size=2, mu=10),
     main="Histogram of negative binomial distribution in Ex 1B",
     xlab=" Negative Bionomial distribution",
     ylab="Frequency",
     col="purple")
```


Now we make a *logarithmic* Histogram of the Distribution.

```{r}
hist(log(rnbinom(n=100, size=2, mu=10)+1),
     main="Histogram of negative binomial distribution in Ex 1B",
     xlab=" Negative Bionomial distribution",
     ylab="Frequency",
     col="orange")
```

Looks much less skewed! 

For the last part the mean and the variance need to be reported as an in line. 

```{r}
variance<-10+10^2*2
mean<-10
```

The variance and mean can be obtained from the formula above and will give you `r variance` for the variance and `r mean` for the mean.



